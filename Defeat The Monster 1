Defeat The Monster 1
A monster has 
H
H health points. Each time you hit it with a sword it loses 
X
X health points. However, the monster always gains 
Y
Y health points right before every one of your hits.

The monster is considered defeated when the number of health points it has becomes zero or less than zero. You need to find if it is possible to defeat the monster.

Input Format
The first line of the input contains a single integer 
T
T - the number of test cases. The description of 
T
T test cases follows.

The first line of each test case contains three space-separated integers 
H
H, 
X
X and 
Y
Y.

Output Format
For each test case, print a single line containing one integer. That integer should be 
1
1 if it is possible to defeat the monster and 
0
0 otherwise.
Constraints
1
≤
T
≤
100
1≤T≤100
1
≤
H
,
X
,
Y
≤
1
0
18
1≤H,X,Y≤10 
18
 
Sample 1:
Input
Output
4
3 6 2
4 6 3
7 1 2
1 1 2
1
1
0
0
Explanation:
Example case 1: The monster will have 
3
+
2
=
5
3+2=5 health points before the first hit. Therefore, it will be defeated after the first hit.

Example case 2: The monster will have 
4
+
3
=
7
4+3=7 health points before the first hit. After the first hit, the monster will have 
7
−
6
=
1
7−6=1 health point. Before the second hit, the monster will have 
1
+
3
=
4
1+3=4 health points. Therefore, it will be defeated after the second hit.

Example case 3: It is impossible to defeat the monster.

Example case 4: It is impossible to defeat the monster.
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;



public class Main
{
	public static void main(String[] args) throws IOException
	{
		try{
		
		Scanner in=new Scanner(System.in);
		int t=in.nextInt();
		while(t>0)
		{
		  //  //ps: this is the health of the monster.
		  //  //for us to win the game, the monster's health points gotto be 0 or lesser.
		   
		        //y represents gain of points by monster, x=loss by monster..;, 
		        //ideally for us to win the monster's loss should be more ...otherwise we are losing, we wont defeat the bad guy.
		       
		   //long datatype is used for this problem
		    long h = in.nextLong();
		    long x = in.nextLong();
		    long y = in.nextLong();
		    if (x>y)
		        System.out.println(1);
		    else
		        System.out.println(0);
		    t--;
		}
		}catch(Exception e){
			return;
		}
	}
}
