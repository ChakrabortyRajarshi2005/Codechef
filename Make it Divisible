Make it Divisible
Given an integer 
N
N, help Chef in finding an 
N
N-digit 
odd
 
positive
 
integer
odd positive integer 
X
X such that 
X
X is divisible by 
3
3 but not by 
9
9.

Note
:
Note: There should not be any leading zeroes in 
X
X. In other words, 
003
003 is not a valid 
3
3-digit odd positive integer.

Input Format
The first line of input contains a single integer 
T
T, denoting the number of testcases. The description of the 
T
T testcases follows.
The first and only line of each test case contains a single integer 
N
N, denoting the number of digits in 
X
X.
Output Format
For each testcase, output a single line containing an 
N
N-digit odd positive integer 
X
X in decimal number system, such that 
X
X is divisible by 
3
3 but not by 
9
9.

Constraints
1
≤
T
≤
500
1≤T≤500
1
≤
N
≤
1
0
4
1≤N≤10 
4
 
The sum of 
N
N over all test cases does not exceed 
1
0
5
10 
5
 
Sample 1:
Input
Output
3
1
2
3
3
15
123
Explanation:
Test Case 
1
1: 
3
3 is the only 
1
1-digit odd positive integer which is divisible by 
3
3 but not by 
9
9.

Test Case 
2
2: 
15
15 is a 
2
2-digit odd positive integer which is divisible by 
3
3 but not by 
9
9. 
21
21 is also a valid answer, among others. Note that 
03
03 is not a valid answer as there should not be any leading zeroes in the output.
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T-->0)
		{
		    int X = sc.nextInt();
		    if(X==1)
		    System.out.println(3);
		    else
		    {
		        for(int i=1; i<X; i++)
		        {
		            System.out.print(9);
		        }
		        System.out.print(3);
		        System.out.println();
		            
		    }
		    
		}
		    
	}
}
